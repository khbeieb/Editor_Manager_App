version: '3.9'

services:
  backend:
    build:
      context: ./backend
    expose:
      - "8080"
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      db:
        condition: service_started
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    ports:
      - "${FRONTEND_PORT}:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    command: npm start
    depends_on:
      - backend
    environment:
      - API_BASE_URL=${API_BASE_URL}
    networks:
      - app-network
    restart: unless-stopped

  e2e-tests:
    build:
      context: ./e2e-tests
      dockerfile: Dockerfile
    depends_on:
      - frontend
      - backend
    environment:
      E2E_BASE_URL_UI: "http://frontend:4200"
      E2E_BASE_URL_API: "http://backend:8080"
    command: mvn test
    volumes:
      - ./e2e-tests:/e2e-tests
      - ~/.m2:/root/.m2
    working_dir: /e2e-tests

  api-tests:
    build:
      context: ./api-tests
      dockerfile: Dockerfile
    depends_on:
      - backend
    environment:
      API_BASE_URL: "http://backend:8080"
    command: mvn test
    volumes:
      - ./api-tests:/api-tests
      - ~/.m2:/root/.m2
    working_dir: /api-tests

  selenium-hub:
    image: seleniarm/hub:latest
    container_name: selenium-hub
    ports:
      - "4444:4444"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:4444/status || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s

  selenium-chrome:
    image: seleniarm/node-chromium:latest
    container_name: selenium-chrome
    shm_size: 2g
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    networks:
      - app-network

  selenium-firefox:
    image: seleniarm/node-firefox:latest
    container_name: selenium-firefox
    shm_size: 2g
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
    networks:
      - app-network

  e2e-selenium:
    build:
      context: ./e2e-selenium
      dockerfile: Dockerfile
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
      selenium-hub:
        condition: service_healthy
    environment:
      E2E_BASE_URL_UI: "http://frontend:4200"
      E2E_BASE_URL_API: "http://backend:8080"
      SELENIUM_REMOTE_URL: "http://selenium-hub:4444/wd/hub"
    command: mvn clean test
    shm_size: 2g
    volumes:
      - ./e2e-selenium:/e2e-selenium:cached
      - ~/.m2:/root/.m2
    working_dir: /e2e-selenium
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
