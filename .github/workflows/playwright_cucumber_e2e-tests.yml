name: E2E Tests (Playwright - Java)

on:
  workflow_dispatch:
    inputs:
      cucumber_tags:
        description: "Select the Cucumber tag suite to run"
        required: false
        type: choice
        options: ["@smoke", "@regression", "@integration"]
        default: "@regression"
      environment:
        description: "Select the environment configuration"
        required: false
        type: choice
        options: ["dev", "staging", "prod"]
        default: "dev"
      browser:
        description: "Select browser (or all)"
        required: false
        type: choice
        options: ["all", "chromium", "firefox", "webkit"]
        default: "all"

permissions:
  contents: read
  pages: write
  id-token: write

run-name: "Playwright E2E (Java) | Env: ${{ github.event.inputs.environment || 'dev' }} | Browser: ${{ github.event.inputs.browser || 'all' }} | Tag: ${{ github.event.inputs.cucumber_tags || '@regression' }}"

jobs:
  playwright-e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
      max-parallel: 3

    steps:
      - name: Conditional skip
        id: skip-check
        run: |
          INPUT_BROWSER="${{ github.event.inputs.browser }}"
          MATRIX_BROWSER="${{ matrix.browser }}"

          if [ "$INPUT_BROWSER" != "all" ] && [ "$INPUT_BROWSER" != "$MATRIX_BROWSER" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop if skipped
        if: steps.skip-check.outputs.skip == 'true'
        run: |
          echo "⏭️ Skipping browser ${{ matrix.browser }} (selected: ${{ github.event.inputs.browser }})"
          exit 0

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Start full stack
        run: |
          ENV_NAME="${{ github.event.inputs.environment || 'dev' }}"
          echo "🚀 Starting app stack for $ENV_NAME"
          docker compose \
            --env-file ./config/.env.${ENV_NAME} \
            -f docker-compose.yml \
            up -d --build db backend frontend

          echo "🕒 Waiting for frontend to be ready..."
          for i in {1..20}; do
            if curl -s http://localhost:4200 > /dev/null; then
              echo "✅ Frontend is up!"
              break
            fi
            echo "⏳ Waiting for frontend ($i/20)..."
            sleep 5
          done

      - name: Run Playwright E2E Tests (${{ matrix.browser }})
        run: |
          ENV_NAME="${{ github.event.inputs.environment || 'dev' }}"
          TAG_INPUT="${{ github.event.inputs.cucumber_tags || '@regression' }}"
          BROWSER="${{ matrix.browser }}"

          echo "🧪 Running Playwright E2E (Java) | Env: $ENV_NAME | Browser: $BROWSER | Tags: $TAG_INPUT"

          docker compose \
            --env-file ./config/.env.${ENV_NAME} \
            -f docker-compose.yml \
            run --rm \
            -e TEST_BROWSER=${BROWSER} \
            e2e-tests sh -c "
              cd /e2e-tests && \
              mvn clean test \
                -Dcucumber.filter.tags='$TAG_INPUT' \
                -Dbrowser=${BROWSER} \
                -Dallure.results.directory=target/allure-results \
                -Dmaven.test.failure.ignore=true
            "

      - name: Generate Allure HTML report
        run: |
          ALLURE_VERSION="2.27.0"
          curl -L -o "allure.zip" "https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/$ALLURE_VERSION/allure-commandline-$ALLURE_VERSION.zip"
          unzip allure.zip -d /opt
          sudo mv /opt/allure-$ALLURE_VERSION /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
          allure generate e2e-tests/target/allure-results -o e2e-tests/target/allure-report --clean

      - name: Upload Allure HTML report (${{ matrix.browser }})
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-html-${{ matrix.browser }}-${{ github.run_id }}
          path: e2e-tests/target/allure-report
          retention-days: 7

      - name: Stop stack
        if: always()
        run: docker compose -f docker-compose.yml down -v

  summary:
    needs: playwright-e2e-tests
    runs-on: ubuntu-latest
    steps:
      - name: Generate workflow summary
        run: |
          echo "## ✅ Playwright E2E Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Browser | HTML Report |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------------|" >> $GITHUB_STEP_SUMMARY
          for browser in chromium firefox webkit; do
            echo "| $browser | [Download HTML Report (artifact)](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) |" >> $GITHUB_STEP_SUMMARY
          done
